<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <springProperty name="AWS_ACCESS_KEY" source="cloud.aws.credentials.accessKey"/>
    <springProperty name="AWS_SECRET_KEY" source="cloud.aws.credentials.secretKey"/>
    <timestamp key="timestamp" datePattern="yyyy-MM-dd-HH-mm-ssSSS"/>

    <!--AWS CloudWatch 로그 전송용(에러만 전송)-->
    <appender name="aws_cloud_watch_log" class="ca.pjer.logback.AwsLogsAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <!--ERROR 레벨보다 낮은 로그들은 필터링.-->
            <level>ERROR | WARN</level>
        </filter>
        <layout>
            <pattern>[%thread] [%date] [%level] [%file:%line] - %msg%n</pattern>
        </layout>
        <logGroupName>SlackLogs</logGroupName>
        <logStreamUuidPrefix>error-log-</logStreamUuidPrefix>
        <logRegion>ap-northeast-2</logRegion>
        <maxBatchLogEvents>50</maxBatchLogEvents>
        <maxFlushTimeMillis>30000</maxFlushTimeMillis>
        <maxBlockTimeMillis>5000</maxBlockTimeMillis>
        <retentionTimeDays>0</retentionTimeDays>
        <accessKeyId>${AWS_ACCESS_KEY}</accessKeyId>
        <secretAccessKey>${AWS_SECRET_KEY}</secretAccessKey>
    </appender>

    <!--단순 콘솔 로그 출력용-->
    <appender name="console_log" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>[%thread] [%date] [%level] [%file:%line] - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- 로컬 환경일 경우 로그를 단순히 콘솔창에 출력 (INFO 레벨 이상) -->
    <springProfile name="local">
        <root level="INFO">
            <appender-ref ref="console_log"/>
        </root>
    </springProfile>

    <!-- dev, prod 환경일 경우 로그를 콘솔창에 출력 (INFO 레벨 이상) 및 AWS CloudWatch로 로그 전송 -->
    <springProfile name="(dev | prod)">
        <root level="INFO">
            <appender-ref ref="console_log"/>
            <appender-ref ref="aws_cloud_watch_log" />
        </root>
    </springProfile>
</configuration>